/*
    This file was generated by `root_dir`/gen_lut.py
*/

module sawtooth_lut #(
    localparam int OUT_WIDTH = 16,
    localparam int LUT_SIZE = 16,
    localparam int SEL_WIDTH = $clog2(LUT_SIZE)
) (
    output logic signed [OUT_WIDTH-1:0] sawtooth_o,
    input  logic                        clk,
    input  logic                        rst_n,
    input  logic        [SEL_WIDTH-1:0] lut_sel,
    input  logic                        reverse
);

logic [SEL_WIDTH-1:0] sawtooth_sel;
assign sawtooth_sel = (reverse) ? ~lut_sel : lut_sel;

always_ff @(posedge clk or negedge rst_n) begin
    if (!rst_n) begin
        sawtooth_o <= 0;
    end else begin
        case(sawtooth_sel)
            0: sawtooth_o <= 16'sd0;
            1: sawtooth_o <= 16'sd4096;
            2: sawtooth_o <= 16'sd8192;
            3: sawtooth_o <= 16'sd12288;
            4: sawtooth_o <= 16'sd16384;
            5: sawtooth_o <= 16'sd20479;
            6: sawtooth_o <= 16'sd24575;
            7: sawtooth_o <= 16'sd28671;
            8: sawtooth_o <= 16'sd32767;
            9: sawtooth_o <= -16'sd28671;
            10: sawtooth_o <= -16'sd24575;
            11: sawtooth_o <= -16'sd20479;
            12: sawtooth_o <= -16'sd16384;
            13: sawtooth_o <= -16'sd12288;
            14: sawtooth_o <= -16'sd8192;
            15: sawtooth_o <= -16'sd4096;
        endcase
    end
end

endmodule
