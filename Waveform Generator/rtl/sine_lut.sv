/*
    This file was generated by `root_dir`/gen_lut.py
*/

module sine_lut #(
    localparam int OUT_WIDTH = 16,
    localparam int LUT_SIZE = 16,
    localparam int SEL_WIDTH = $clog2(LUT_SIZE)
) (
    output logic signed [OUT_WIDTH-1:0] sine_o,
    input  logic                        clk,
    input  logic                        rst_n,
    input  logic        [SEL_WIDTH-1:0] lut_sel
);

always_ff @(posedge clk or negedge rst_n) begin
    if (!rst_n) begin
        sine_o <= 0;
    end else begin
        case(lut_sel)
            0: sine_o <= 16'sd0;
            1: sine_o <= 16'sd12539;
            2: sine_o <= 16'sd23170;
            3: sine_o <= 16'sd30273;
            4: sine_o <= 16'sd32767;
            5: sine_o <= 16'sd30273;
            6: sine_o <= 16'sd23170;
            7: sine_o <= 16'sd12539;
            8: sine_o <= 16'sd0;
            9: sine_o <= -16'sd12539;
            10: sine_o <= -16'sd23170;
            11: sine_o <= -16'sd30273;
            12: sine_o <= -16'sd32767;
            13: sine_o <= -16'sd30273;
            14: sine_o <= -16'sd23170;
            15: sine_o <= -16'sd12539;
        endcase
    end
end

endmodule
